Based on https://brandonw.net/crap/82A_exploit.zip

>Setup
1. Install Python v3.5 or later.
If prompted during installation, choose to add it to your PATH environment variable.

2. Make sure libusb is installed. On Windows, install LibUSB-Win32.

3. Install PyUSB.
On Windows, this is done via command prompt with administrator privileges.
On Linux/Mac use sudo pip3 install pyusb

4. On Windows, you may need to install a filter driver for the calculator. If so, you may need to re-install this driver every time you plug the calculator into a different USB port.
To do this, you can run the filter wizard in LibUSB-Win32, or you can install all class filters (not recommended), or you can use a libusb driver, such as the one that comes with TiLP II (although this may also require installing a filter driver).

>Running the TI-82 Advanced Exploit
	0. Send APP*.8xv to the calculator AND ARCHIVE IT. Run GarbageCollect (in catalog).
	1. Go to Link -> Receive (I don't know what in French, sorry)
	2. Send the TI-82 Advanced backup file by running: python3 tisndrcv.py send_backup 82A_exploit.82B
	3. Accept warning on calculator
	4. Press 2nd+quit when it says done
	5. Unarchive "APP" variable
	6. Type X -> Y [enter] [enter]
	7. The app will be installed

DO NOT *EVER* INSTALL AN APP WITH A DUPLICATE NAME! This is not handled yet.

You can use CalcUtil to restore the ability to run assembly programs normally!
You can use CharMap to add Asm() back to the catalog too.
But there are still some things that don't work (like AsmComp/unsquished programs, and BasicBuilder).

>Customizing the TI-82 Advanced Exploit
	0. Modify z.z80 as desired
	1. Build the payload by running build.bat or lbuild.sh, which will create z.8xp.
	2. Embed the payload into the TI-82 Advanced backup file by running python3 build_82a_backup.py, which will create 82A_exploit.82B.
